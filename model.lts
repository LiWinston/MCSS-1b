//the number of nurses in the emergency department
const MAX_NURSES = 3
//the number of orderlies required to transfer a patient
const TRANSFER_ORDERLIES = 3
//the number of orderlies in the emergency department
const MAX_ORDERLIES = 8
//the number of patients that can be in the arriving place of Foyer
const MAX_ARRIVING = 1
//the number of patients that can be in the leaving place of Foyer
const MAX_LEAVING = 1

FreeNurseCounter(I = MAX_NURSES) = NC[I],
NC[v:0..MAX_NURSES] = (
    when (v < MAX_NURSES)  freeNs -> NC[v+1]
    |when (v > 0)  allocNs -> NC[v-1]
).

OrderliesCounter(I = MAX_ORDERLIES) = OC[I],
OC[v:0..MAX_ORDERLIES] = (
    when (v >= TRANSFER_ORDERLIES) allocOd -> OC[v - TRANSFER_ORDERLIES]
    |when (v <= MAX_ORDERLIES - TRANSFER_ORDERLIES)  freeOd -> OC[v + TRANSFER_ORDERLIES]
).

FoyerArrive(I = 0) = FA[I],
FA[v:0..MAX_ARRIVING] = (
    when (v < MAX_ARRIVING) fyArriveIn -> FA[v+1]
    |when (v > 0)  allocOd -> fyArriveOut -> FA[v-1]
).

FoyerLeave(I = 0) = FL[I],
FL[v:0..MAX_LEAVING] = (
    when (v < MAX_LEAVING) fyLeaveIn -> freeOd -> FL[v+1]
    |when (v > 0)  fyLeaveOut -> FL[v-1]
).

TRIAGE = TR[0],
TR[t:0..1] = (when(t < 1) arriveTrg -> freeOd->  TR[1] 
 |when(t > 0) allocOd -> leaveTrg -> TR[0]).

TREATMENT = TRT[0],
TRT[t:0..1] = (when(t < 1) arriveTrt -> TRT[1]
 |when(t > 0) leaveTrt -> TRT[0]
 |when(t > 0) treat -> TRT[t]).

SPECIALIST = (out -> SPECIALIST | treat -> SPECIALIST | idle -> SPECIALIST).

SeriousPatients = (fyArriveIn -> allocNs -> fyArriveOut
                     -> arriveTrg -> leaveTrg 
                     -> arriveTrt -> treat -> leaveTrt 
                     -> fyLeaveIn -> fyLeaveOut -> freeNs -> SeriousPatients). 
NonSeriousPatients = (fyArriveIn -> allocNs -> arriveTrg 
                     -> arriveTrg -> leaveTrg
                     -> fyLeaveIn-> fyLeaveOut -> freeNs -> NonSeriousPatients).


const FREE = 0
const BUZY = 1
Nurse = Nurse[0],
Nurse[s:0..1] = ( when(s == 0) allocNs ->  Nurse[1]
                |when(s == 1) freeNs -> Nurse[0]
                |when(s == 1) allocOd -> freeOd -> Nurse[s]).
        
Producer = (fyArriveIn -> Producer).
Consumer = (fyLeaveOut -> Consumer).
||EmergencyDepartment = ({a,b,c,d}::SeriousPatients ||{e,f,g}:: NonSeriousPatients || {n[1..MAX_NURSES]}::Nurse || OrderliesCounter ||
                             FreeNurseCounter || FoyerArrive || FoyerLeave || TRIAGE || TREATMENT || SPECIALIST || Producer || Consumer).

